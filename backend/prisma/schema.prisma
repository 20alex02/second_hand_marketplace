generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id  String @id @default(uuid())
  createdAt DateTime @default(now())
  deletedAt DateTime?
  email String
  phoneNumber String
  hashedPassword String
  salt String
  role Role @default(USER)
  participants Participant[]
  advertisements Advertisement[]
}

enum Role {
  USER
  ADMIN
}

model Participant {
  id  String @id @default(uuid())
  phoneNumber String
  createdAt DateTime @default(now())
  deletedAt DateTime?
  userId String?
  user User? @relation(fields: [userId], references: [id])
  advertisementId String
  advertisement Advertisement @relation(fields: [advertisementId], references: [id])
}

model Advertisement {
  id  String @id @default(uuid())
  createdAt DateTime @default(now())
  deletedAt DateTime?
  title String
  type AdvertisementType
  description String
  estimatedPrice Int?
  hidden Boolean @default(false)
  creatorId String
  creator User @relation(fields: [creatorId], references: [id])
  participants Participant[]
  images AdvertisementImage[]
  categories Category[]
}

enum AdvertisementType {
  OFFER
  REQUEST
}

model AdvertisementImage {
  id  String @id @default(uuid())
  path String
  advertisementId String
  advertisement Advertisement @relation(fields: [advertisementId], references: [id])
}

model Category {
  id  String @id @default(uuid())
  name String
  isLeaf Boolean
  parentId String?
  parent Category? @relation("parentId", fields: [parentId], references: [id])
  subcategories Category[] @relation("parentId")
  advertisements Advertisement[]
}
